{"version":3,"sources":["app/views/pages/Modules/components/BookPreview.jsx","app/views/pages/Modules/ModuleTable.jsx","app/views/pages/Modules/index.jsx","app/redux/actions/index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","concat","version","Transition","forwardRef","props","ref","_jsx","Slide","_objectSpread","direction","DownloadButton","_ref","bookId","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","loading","setLoading","Button","variant","color","onClick","axiosInstance","get","then","_ref2","data","blob","Blob","type","downloadLink","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","catch","err","finally","disabled","startIcon","CircularProgress","size","CloudDownload","children","BookPreview","_ref3","open","handleClose","_useState3","_useState4","book","setBook","_useState5","_useState6","pageCount","setPageCount","_useState7","_useState8","pageNumber","setPageNumber","_useState9","_useState10","setDirection","_useState11","_useState12","pages","setPages","containerRef","useRef","useEffect","_ref5","_jsxs","Dialog","fullScreen","onClose","TransitionComponent","AppBar","sx","position","Toolbar","IconButton","edge","CloseIcon","Typography","ml","flex","component","List","id","ListItem","button","ListItemText","primary","secondary","Divider","Document","className","file","onLoadSuccess","_ref4","numPages","console","log","Array","from","length","_","i","current","offsetWidth","map","page","_Fragment","Page","renderMode","renderTextLayer","renderAnnotationLayer","renderInteractiveForms","selectModules","state","modules","moduleList","ModuleTable","user","useAuth","displayModal","setDisplayModal","uploadId","setUploadId","dispatch","useDispatch","useSelector","selectedRows","setSelectedRows","getModules","navigate","useNavigate","columns","name","label","options","filter","customBodyRender","pdf","rowsSelected","selectableRowsHideCheckboxes","responsive","viewColumns","Selection","onRowClick","s","onRowSelectionChange","rowsSelectedData","allRows","Grid","container","padding","rowSpacing","columnSpacing","authRoles","editor","includes","role","item","xs","sm","md","lg","MUIDataTable","title","mod","attributes","JSON","stringify","grades","grade","description","Container","styled","theme","margin","_defineProperty","breakpoints","down","marginBottom","Modules"],"mappings":"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","file":"static/js/12.fca4f5f2.chunk.js","sourcesContent":["import { useEffect, useState, useRef, forwardRef } from 'react'\r\nimport axiosInstance from \"axios\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\n// import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useSnackbar } from 'notistack';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport './style.css';\r\n  import { CircularProgress } from '@mui/material';\r\nimport { CloudDownload } from '@mui/icons-material';\r\n\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DownloadButton = ({bookId}) =>  {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setLoading(true);\r\n\r\n    // Call the API to fetch the base64 encoded PDF\r\n    axiosInstance.get('/api/upload?id=' + bookId)\r\n      .then(({data}) => {\r\n      // .then(response => {\r\n        // Create a Blob from the base64 PDF string\r\n        const blob = new Blob([data.data], { type: 'application/pdf' });\r\n\r\n        // Create a link element to trigger the download\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.href = URL.createObjectURL(blob);\r\n        downloadLink.download = 'document.pdf';\r\n\r\n        // Add the link to the DOM and click it\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n          enqueueSnackbar('Downloading pdf', { variant: 'success'})\r\n      })\r\n      .catch(err => enqueueSnackbar('Download Failed. Check your connection.', { variant: 'error'}))\r\n      .finally(() => {\r\n        // Remove the link from the DOM\r\n        setLoading(false);\r\n      })\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\" onClick={handleClick} disabled={loading} startIcon={loading ? <CircularProgress size={20} /> : <CloudDownload />}>\r\n      Download PDF\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst BookPreview = ({open, handleClose, bookId})  => {\r\n\r\n  // const viewer = useRef(null);\r\n  const [book, setBook] = useState({})\r\n  const [pageCount, setPageCount] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [direction, setDirection] = useState('next');\r\n  const [ pages, setPages ] = useState([])\r\n  const containerRef = useRef(null)\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n      console.log('Bro... 💀')\r\n      setPageCount(numPages);\r\n      setPages(Array.from({length: numPages}, (_, i) => i + 1))\r\n      containerRef.current && console.log('OffsetWidth', containerRef.current.offsetWidth)\r\n    }\r\n\r\n  // Create custom hook to fetch the book\r\n  useEffect(() => {\r\n      axiosInstance.get('/api/upload?id=' + bookId)\r\n              .then(({data}) => {\r\n                setBook(data);\r\n              })\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bookId])\r\n\r\n  const reset = () => {\r\n    direction && setDirection('next')\r\n    pageNumber && setPageNumber(1)\r\n    pages && setPages([])\r\n    pageCount && setPageCount(null)\r\n    handleClose()\r\n  }\r\n  return (\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={reset}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Preview Book\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n            { book?.id && (<ListItem button>\r\n                         <ListItemText primary=\"Book Id\" secondary={book.id} />\r\n                          <DownloadButton bookId={book.id} />\r\n                       </ListItem>)   \r\n            }\r\n\r\n          <Divider />\r\n        </List>\r\n        { book?.data  &&\r\n         (<div id=\"ReaderContainer\">\r\n              <Document className={'PDFDocument'} file={`data:application/pdf;base64,${book.data}`} onLoadSuccess={onDocumentLoadSuccess}>\r\n                  {pages.map(page => (\r\n                    <>\r\n                      <Page \r\n                      className={'PDFPage PDFPageOne'}\r\n                      renderMode={'canvas'}\r\n                      pageNumber={page}\r\n                      renderTextLayer={false}\r\n                      renderAnnotationLayer={false}\r\n                      renderInteractiveForms={false}\r\n                      key={page}\r\n                      />\r\n                    </>\r\n                    ))}\r\n              </Document>\r\n          </div>)   \r\n        }\r\n       \r\n      </Dialog>\r\n  );\r\n}\r\n\r\nexport default BookPreview;","import { useState, useEffect } from 'react';\r\n// material-ui\r\nimport { Grid, Button } from '@mui/material';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getModules } from '../../../redux/actions'\r\nimport { useSelector, useDispatch  } from 'react-redux'\r\nimport BookPreview from './components/BookPreview'\r\nimport { authRoles } from 'app/auth/authRoles'\r\nimport useAuth from 'app/hooks/useAuth'\r\nconst selectModules = state => state.modules.moduleList\r\n\r\nconst ModuleTable = () => {\r\n    const { user } = useAuth()\r\n    // Modal functions\r\n    const [displayModal, setDisplayModal] = useState(false)\r\n    const [uploadId, setUploadId] = useState('')\r\n    const handleModalClose = () => {\r\n        setDisplayModal(false)\r\n    }\r\n\r\n    const dispatch = useDispatch() \r\n    const modules = useSelector(selectModules)\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    useEffect(() => {\r\n        if(!selectedRows.length && !modules.length){\r\n            dispatch(getModules())\r\n        }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch])\r\n    \r\n    const navigate = useNavigate();\r\n    const columns = [\r\n        {\r\n            name: 'tite',\r\n            label: 'Title',\r\n            options: {\r\n                filter: true\r\n              }\r\n        },\r\n        {\r\n            name: 'category',\r\n            label: 'Category',\r\n        },\r\n        {\r\n            name: 'file',\r\n            label: 'File',\r\n            options: {\r\n                customBodyRender: (pdf) => {\r\n                  return (\r\n                    <Button onClick={() => {\r\n                        setUploadId(pdf)\r\n                        setDisplayModal(true)\r\n                    }}>View Book</Button>\r\n                  )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'description',\r\n            label: 'Description'\r\n        },\r\n    ];\r\n\r\n    // const handleDeleteRows = () => {\r\n    //     const userIds =  selectedRows.map(row => schools[row].id)\r\n    //     dispatch(deleteUser(userIds[0]))\r\n    // }\r\n\r\n    const options = {\r\n        rowsSelected: selectedRows,\r\n        selectableRowsHideCheckboxes: true,\r\n        responsive: 'simple',\r\n        viewColumns: true,\r\n        Selection: false,\r\n        onRowClick: (s) => {\r\n          console.log(s)\r\n        },\r\n        onRowSelectionChange: (rowsSelectedData, allRows, rowsSelected) => {\r\n        setSelectedRows(rowsSelected);\r\n      },\r\n        // onRowsDelete: () =>{\r\n        //     handleDeleteRows();\r\n        //     setSelectedRows([])\r\n        // }\r\n    };\r\n    return (\r\n    <>\r\n        <BookPreview open={displayModal} handleClose={handleModalClose} bookId={uploadId}/>\r\n        <Grid container padding={2} rowSpacing={1.5} columnSpacing={2}>\r\n        { authRoles.editor.includes(user.role) && \r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        navigate('/add-modules');\r\n                    }}\r\n                >\r\n                    Add Module\r\n                </Button>\r\n            </Grid>\r\n                }\r\n            <Grid item padding={2}>\r\n                <MUIDataTable title={'Modules'} data={modules.map(mod => {\r\n                    return [\r\n                            // mod.avatar,\r\n                            mod.attributes.title,\r\n                            JSON.stringify(mod.attributes.grades.data.map(grade => grade.attributes.name)),\r\n                            mod.id,\r\n                            mod.attributes.description,\r\n                        ]\r\n                })} columns={columns} options={options} />\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default ModuleTable;\r\n","\r\nimport {styled } from \"@mui/system\";\r\nimport ModuleTable from \"./ModuleTable\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Modules = () => {\r\n  return (\r\n    <Container>\r\n         <ModuleTable/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Modules;\r\n\r\n","export * from './UserActions';\r\nexport * from './SchoolActions'\r\nexport * from './ModuleActions'\r\nexport * from './NavigationActions'\r\nexport * from './BeneficiaryActions'\r\nexport * from './CSEActions'"],"sourceRoot":""}