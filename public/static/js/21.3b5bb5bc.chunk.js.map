{"version":3,"sources":["app/views/dashboard/shared/StatCards.jsx","app/views/dashboard/Analytics.jsx","app/redux/actions/index.js"],"names":["StyledCard","styled","Card","_ref","theme","_defineProperty","display","flexWrap","alignItems","justifyContent","padding","background","palette","paper","breakpoints","down","ContentBox","Box","_ref3","color","text","secondary","opacity","fontSize","primary","main","Heading","_ref4","margin","marginTop","fontWeight","selectModules","state","modules","moduleList","StatCards","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","cardList","setCardList","dispatch","useDispatch","useSelector","_useState3","_useState4","count","setCount","_useState5","_useState6","gender","setGender","useEffect","fetch","then","_ref5","data","_ref6","length","getModules","concat","_toConsumableArray","name","amount","icon","link","_jsx","Grid","container","spacing","sx","mb","children","map","item","index","xs","md","_jsxs","elevation","Icon","className","ml","Small","Tooltip","title","placement","IconButton","onClick","Title","marginRight","textTransform","SubTitle","Analytics","Fragment","lg","sm","px","py"],"mappings":"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","file":"static/js/21.3b5bb5bc.chunk.js","sourcesContent":["  import  { useState, useEffect } from 'react'\r\nimport { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport { getModules } from 'app/redux/actions'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector, useDispatch  } from 'react-redux'\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst selectModules = state => state.modules.moduleList\r\nconst StatCards = () => {\r\n  const navigate = useNavigate();\r\n  const [cardList, setCardList] = useState([])\r\n  const dispatch = useDispatch() \r\n  const modules = useSelector(selectModules)\r\n  const [count, setCount] = useState(null)\r\n  const [gender, setGender] = useState(null)\r\n  useEffect(() => {\r\n      if(!count){\r\n        fetch('/api/student-count').then(({data}) => setCount(data))\r\n      }\r\nif(!gender){\r\n        fetch('/api/student-gender-count').then(({data}) => setGender(data))\r\n}\r\n      if(!modules.length){\r\n          dispatch(getModules())\r\n      }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, count])\r\n  useEffect(()=> {\r\n    if(!cardList.length){\r\n      setCardList([...cardList,\r\n      {name: 'Learners', amount: count, icon: 'user', link: '/beneficiaries'},\r\n          { name: 'Modules', amount: modules.length, icon: 'book', link: '/modules' }])\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [modules,count])\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n      {cardList.map((item, index) => (\r\n        <Grid item xs={12} md={6} key={index}>\r\n          <StyledCard elevation={6}>\r\n            <ContentBox>\r\n              <Icon className=\"icon\">{item.icon}</Icon>\r\n              <Box ml=\"12px\">\r\n                <Small>{item.name}</Small>\r\n                <Heading>{item.amount}</Heading>\r\n              </Box>\r\n            </ContentBox>\r\n\r\n            <Tooltip title=\"View Details\" placement=\"top\">\r\n              <IconButton onClick={() => navigate(item.link)}>\r\n                <Icon>arrow_right_alt</Icon>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </StyledCard>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards;\r\n","import { Card, Grid, styled} from '@mui/material';\r\nimport { Fragment } from 'react';\r\nimport StatCards from './shared/StatCards';\r\n\r\nconst ContentBox = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n}));\r\n\r\nconst Title = styled('span')(() => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  marginRight: '.5rem',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubTitle = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\nconst Analytics = () => {\r\n  return (\r\n    <Fragment>\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\r\n              <Title>Traffic Sources</Title>\r\n              <SubTitle>providing all the details</SubTitle>\r\n            </Card>\r\n          </Grid>\r\n         \r\n          <Grid item lg={8} md={8} sm={12} xs={12}>\r\n            <StatCards />\r\n          </Grid>\r\n\r\n         \r\n        </Grid>\r\n      </ContentBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","export * from './UserActions';\r\nexport * from './SchoolActions'\r\nexport * from './ModuleActions'\r\nexport * from './NavigationActions'\r\nexport * from './BeneficiaryActions'\r\nexport * from './CSEActions'"],"sourceRoot":""}