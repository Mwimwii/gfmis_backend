{"version":3,"sources":["../node_modules/@mui/x-data-grid/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@mui/x-data-grid/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/@mui/x-data-grid/utils/warning.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/ErrorBoundary.js","../node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","../node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","../node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","../node_modules/@mui/x-data-grid/components/GridAutoSizer.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridBody.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/EventManager.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@mui/x-data-grid/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@mui/x-data-grid/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/components/icons/index.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/models/gridDensity.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/models/gridFeatureMode.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGroupingPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/components/ErrorOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/chainPropTypes.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","getDataGridUtilityClass","slot","generateUtilityClass","gridClasses","generateUtilityClasses","GridRootStyles","styled","name","overridesResolver","props","styles","_defineProperty","concat","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","root","_ref52","_$concat2","_$concat3","_extends2","theme","borderColor","palette","mode","lighten","alpha","divider","darken","flex","boxSizing","position","border","borderRadius","shape","color","text","primary","typography","body2","outline","height","display","flexDirection","borderBottomColor","WebkitTapHighlightColor","lineHeight","padding","main","outlineWidth","outlineOffset","justifyContent","alignItems","iconButtonContainer","visibility","width","opacity","transition","transitions","create","duration","shorter","minWidth","whiteSpace","overflow","columnHeaderTitleContainerContent","borderBottom","fontSize","cursor","marginRight","marginLeft","backgroundColor","action","hover","zIndex","left","right","touchAction","pointerEvents","breakInside","selectedOpacity","hoverOpacity","textOverflow","boxShadow","shadows","background","paper","booleanCell","secondary","disabled","actionsCell","gridGap","spacing","disabledOpacity","rowReorderCellContainer","borderRight","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","equals","entry","get","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","lastResult","recomputations","resetRecomputations","buildWarning","message","gravity","alreadyWarned","cleanMessage","console","error","warn","wrapWithWarningOnCall","method","cacheContainer","args","selectorArgs","stateOrApiRef","instanceId","isApiRef","current","cacheKey","state","newSelector","reselectCreateSelector","Map","set","acceptsApiRef","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnsMetaSelector","totalWidth","useGridSelector","apiRef","isOutputSelector","GridApiContext","React","useGridApiContext","GridRootPropsContext","useGridRootProps","contextValue","gridDensitySelector","density","gridDensityValueSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityHeaderGroupingMaxDepthSelector","headerGroupingMaxDepth","gridDensityFactorSelector","factor","gridDensityTotalHeaderHeightSelector","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","pinnedRows","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","top","bottom","_excluded","GridRoot","ref","rootProps","children","className","other","densityValue","rootContainerRef","handleRef","useForkRef","pinnedRowsCount","ownerState","classes","slots","capitalize","composeClasses","useUtilityClasses","rootElementRef","_React$useState","_React$useState2","_slicedToArray","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","_jsx","clsx","role","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","flexGrow","GridMainContainer","ErrorBoundary","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","errorInfo","api","logError","showError","_this$state","hasError","render","GridErrorHandler","errorState","errorProps","_rootProps$components","components","ErrorOverlay","componentsProps","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","offsetWidth","offsetHeight","scrollListener","e","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","forEach","fn","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","document","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","container","constructor","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","getRootNode","innerHTML","addEventListener","__animationListener__","removeResizeListener","removeEventListener","removeChild","GridAutoSizer","_props$defaultHeight","defaultHeight","_props$defaultWidth","defaultWidth","_props$disableHeight","disableHeight","_props$disableWidth","disableWidth","onResize","setState","rootRef","parentElement","handleResize","useEventCallback","computedStyle","ownerWindow","paddingLeft","parseInt","paddingRight","newHeight","paddingTop","paddingBottom","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sortDirection","sort","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","quickFilterValues","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","operator","operatorValue","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","totalHeaderHeight","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","viewportInnerSize","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","GridOverlays","_rootProps$components2","_rootProps$components3","visibleRowCount","showNoResultsOverlay","overlay","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","disableVirtualization","isVirtualizationDisabled","setIsVirtualizationDisabled","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","size","publishEvent","_jsxs","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","_ref","Provider","isFunction","escapeRegExp","replace","clamp","min","max","Math","isDeepEqual","entriesA","from","has","entryA","Set","ArrayBuffer","isView","RegExp","flags","valueOf","randomNumberBetween","seed","random","t","imul","deepClone","obj","structuredClone","JSON","parse","stringify","forceDebug","window","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","slice","_toConsumableArray","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","installMethods","methodName","_apiMethodsRef$curren","GridSignature","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","_this","setTimeout","delete","cleanupToken","clearTimeout","_this2","unregister","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","register","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","event","details","_handlerRef$current","defaultMuiPrevented","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","listener","collection","highPriority","regular","highPriorityListeners","regularListeners","that","on","oneTimeListener","removeListener","isSyntheticEvent","isPropagationStopped","globalId","useGridApiInitialization","inputApiRef","unstable_eventManager","unstable_caches","_args$","signature","DataGridPro","emit","_typeof","Symbol","iterator","_toPropertyKey","arg","input","hint","prim","toPrimitive","TypeError","String","Number","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","others","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","_updatedControlStateI","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","registerPipeApplier","applier","otherAppliers","requestPipeProcessorsApplication","applyPipeProcessors","context","preProcessor","unstable_registerPipeProcessor","unstable_registerPipeApplier","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","_ref2","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","userSelect","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","isModifierKeyPressed","ctrlKey","metaKey","altKey","fromCharCode","keyCode","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","open","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","registerPreProcessor","useGridRegisterPipeApplier","GridArrowUpwardIcon","createSvgIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","renderSingleSelectOptions","OptionComponent","valueFormatter","isOptionTypeObject","formattedValue","content","label","GridFilterInputValue","_baseSelectProps$nati","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","_React$useState3","_React$useState4","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","_item$value2","itemValue","InputProps","endAdornment","BaseTextField","placeholder","onChange","variant","InputLabelProps","shrink","inputRef","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","_rootProps$experiment","_rootProps$experiment3","colDef","hasFocus","_props$debounceMs","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_rootProps$experiment2","newValue","parsedValue","wrap","_context","valueParser","getCellParams","setEditCellValue","unstable_skipValueParser","stop","_x","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","stripDiacritics","string","normalize","createFilterOptions","config","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","_config$trim","trim","inputValue","getOptionLabel","filteredOptions","candidate","array","comp","defaultFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","disabledProp","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_option$label","_props$isOptionEqualT","isOptionEqualToValue","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onClose","onHighlightChange","onInputChange","onOpen","openProp","_props$openOnFocus","openOnFocus","_props$readOnly","readOnly","_props$selectOnFocus","selectOnFocus","valueProp","optionLabel","ignoreFocus","firstFocus","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","default","_useControlled2","_useControlled3","_useControlled4","setInputValueState","_React$useState5","_React$useState6","focused","setFocused","resetInputValue","newInputValue","prevValue","valueChange","_useControlled5","_useControlled6","setOpenState","_React$useState7","_React$useState8","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","_ref2$reason","removeAttribute","classList","remove","listboxNode","add","clientHeight","scrollBottom","elementBottom","offsetTop","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","activeElement","handleInputChange","handleOptionMouseOver","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","handleInputMouseDown","dirty","groupedOptions","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","getListSubheaderUtilityClass","ListSubheaderRoot","disableGutters","gutters","inset","disableSticky","sticky","listStyle","vars","fontFamily","fontWeight","fontWeightMedium","pxToRem","ListSubheader","inProps","useThemeProps","_props$color","_props$component","component","_props$disableGutters","_props$disableSticky","_props$inset","as","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","_ref6","_$concat","_extends3","clearIndicator","margin","maxWidth","flexWrap","inputClasses","inputBaseClasses","sizeSmall","outlinedInputClasses","filledInputClasses","hiddenLabel","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","AutocompletePopupIndicator","_ref7","popupIndicator","popupIndicatorOpen","_ref8","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","_ref10","modal","AutocompletePaper","Paper","_ref11","body1","AutocompleteLoading","_ref12","AutocompleteNoOptions","noOptions","_ref13","AutocompleteListbox","listbox","_ref14","_ariaSelectedTru","_$concat4","maxHeight","minHeight","breakpoints","up","focusVisible","mainChannel","focusOpacity","AutocompleteGroupLabel","groupLabel","_ref16","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","_componentsProps$pape","startAdornment","ChipProps","_props$clearIcon","clearIcon","ClearIcon","_props$clearText","clearText","_props$closeText","closeText","_props$componentsProp","_props$disabled","_props$disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","_props$popupIcon","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","_useAutocomplete","getCustomizedTagProps","Chip","props2","renderListOption","optionProps","title","inputProps","clientWidth","option2","index2","GridFilterInputMultipleValue","helperText","TextFieldProps","GRID_STRING_COL_DEF","Infinity","hide","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","compare","align","disableTrim","getApplyFilterFn","filterItemValue","filterRegex","test","sensitivity","usage","requiresFilterValue","filterValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","columnValue","parseNumericValue","getGridNumericOperators","isNaN","InputComponentProps","_ref9","includes","GRID_NUMERIC_COL_DEF","headerAlign","isNumber","toLocaleString","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","_filterItem$value$mat","match","_filterItem$value$mat2","year","month","day","hour","minute","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","StyledInputBase","GridEditDateCell","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","_newFormattedDate$spl","_newFormattedDate$spl2","date","_date$split","_date$split2","_time$split","_time$split2","hours","minutes","setFullYear","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridBooleanCellRaw","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","Boolean","GridBooleanCell","GridEditBooleanCell","checked","BaseCheckbox","baseCheckbox","GridFilterInputBoolean","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","rowNode","isAutoGenerated","valueAsBoolean","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","GridEditModes","GridCellModes","GridRowModes","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellEnterEditModeKeys","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","isHideMenuKey","GridEditSingleSelectCell","valueOptionsFormatted","_props$initialOpen","initialOpen","editMode","Cell","setOpen","formattedTargetValue","isValid","sent","abrupt","Row","Promise","resolve","commitCellChange","setCellMode","BaseSelect","MenuProps","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","GridFilterInputMultipleSingleSelect","_props$variant","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","_apiRef$current$getCo","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","GridMenuRoot","menu","transformOrigin","GridMenu","onClickAway","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","popperOnExited","TransitionProps","ClickAwayListener","mouseEvent","Grow","GridActionsCell","_props$position","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","preventScroll","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","button","touchRippleRef","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","_nativeColumnTypes","number","dateTime","boolean","singleSelect","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","colType","colTypeDef","extendType","GridPreferencePanelsValue","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","_apiRef$current","columnsStateWithoutColumnVisibilityModel","columnsToUpsert","initialState","columnTypes","_ref7$currentColumnVi","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","_ref7$keepOnlyColumns","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","_initialState$ordered","orderedFields","_initialState$dimensi","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","_loop","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridDensityTypes","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","isLeaf","gridColumnGroupsLookupSelector","columnGrouping","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplet","groupId","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","groupCollapsedModel","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","newMaxDepth","Compact","floor","Comfortable","densityStateInitializer","maxDepth","unwrappedGroupingColumnModel","_unwrappedGroupingCol","_unwrappedGroupingCol2","GridCellCheckboxRenderer","isChecked","checkboxElement","rippleRef","getCellElement","_checkboxElement$curr","shiftKey","isSelectable","isRowSelectable","isPinned","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","indeterminate","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","serializeCellValue","delimiterCharacter","buildCSV","rowIds","CSVBody","cellParams","serializeRow","CSVHead","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","_rowTree$id$position","topPinnedRowsIds","bottomPinnedRowsIds","_excluded2","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","exportedColumns","getRowsToExport","exportedRowIds","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","GridLinkOperator","useGridPrintExport","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","setColumnVisibilityModel","buildPrintWindow","iframeEl","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","gridCloneViewport","virtualScroller","chromeVersion","raw","userAgent","getChromeVersion","contain","columnHeaders","columnHeadersInner","_gridClone$querySelec","_gridClone$querySelec2","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","currentPageTotalHeight","_printDoc$body$classL","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","attributes","attr","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","setPageSize","onload","matchMedia","mql","matches","_options$printOptions","printOptions","GridFeatureModeConstant","getDefaultGridFilterModel","linkOperator","And","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","buildAggregatedFilterApplier","isRowMatchingFilterItems","shouldApplyFilter","resultPerItemId","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","_filterModel$quickFil2","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","quickFilterValueResult","isPassing","_appliersPerColumnFie","_appliersPerColumnFie2","buildAggregatedQuickFilterApplier","passingFilterItems","passingQuickFilterValues","passFilterLogic","allFilterItemResults","allQuickFilterResults","_filterModel$quickFil","_filterModel$linkOper","cleanedFilterItems","cleanedAllFilterItemResults","cleanedAllQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","goToCell","colIndex","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","getRowIdFromIndex","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","headerTitleNode","toggleColumnMenu","handleCellKeyDown","cellMode","Edit","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","rowCount","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","parent","groupingResponseBeforeRowHydration","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","childNode","calculatePinnedRowsHeight","unstable_getRowHeight","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","stateExportPreProcessing","prevState","pageSizeToExport","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","editingStateInitializer","useGridEditing","_props$experimentalFe2","buildCallback","getCellMode","newEditRowsState","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","isEditMode","isEditable","_x2","handleCellDoubleClick","commitPropsAndExit","_callee2","_context2","_x3","_x4","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useCellEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","_callee3","rowParams","_props$experimentalFe3","_context3","_callee4","_context4","_x5","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_callee6","_context6","_callee5","_nextFocusedCell$curr","_context5","_x6","_x7","onRowEditCommit","onRowEditStart","onRowEditStop","useGridRowEditing","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","maybeDebounce","runPendingEditCellValueMutation","debouncedField","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","missingOnProcessRowUpdateErrorWarning","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","startsWith","deleteValue","startCellEditMode","cellToFocusAfter","disableIgnoreModificationsIfProcessingProps","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","_params$cellToFocusAf","finishCellEditMode","_editingState$id$fiel2","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","_editingState$id","_editingState$id$fiel","skipValueParser","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","otherFieldsProps","processedProps","thisField","fieldColumn","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","unstable_getRowWithUpdatedValues","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","updates","DataGrid","uniqueUpdates","update","deletedRowIds","partialRow","_action","getRowModels","allRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","getRowNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","_ref3$skipAutoGenerat","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","rowApi","setRowIndex","targetIndex","oldIndex","updatedRows","unstable_replaceRows","newRows","updatedIdRowsLookup","updatedIdToIdLookup","updatedTree","newRowEntries","newRowModel","_updatedRows$splice","replacedRowId","rowTreeNodeConfig","groupingKey","groupingField","newRowsState","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","flatRowTreeCreationMethod","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","cachedSupportsPreventScroll","rowsMetaStateInitializer","useDataGridComponent","addHeaderGroups","unwrappedGroupingModel","_unwrappedGroupingMod","_unwrappedGroupingMod2","newGroupPath","lookupElement","groupPath","hasGroupPath","useGridColumnGroupingPreProcessors","useGridRowsPreProcessors","editingStateInitializer_new","editingStateInitializer_old","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$initialState5","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","getColumnPosition","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnsStateToExport","_props$initialState$c2","_props$initialState4","_props$initialState4$","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","getColumnGroupPath","_columnLookup$field$g","_columnLookup$field","getAllGroupDetails","unstable_getColumnGroupPath","unstable_getAllGroupDetails","_props$columnGrouping2","useGridColumnGrouping","useGridEditing_new","useGridEditing_old","lastClickedCell","publishCellFocusOut","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","newFilterItems","filterItemsWithValue","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","isRowPassing","_params$isRowMatching","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","getSortCellParams","parseSortItem","rowList","row1","row2","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","bodyRowIds","footerRowIds","handleColumnHeaderClick","latestColumns","useGridSorting","_column$groupPath$len","_column$groupPath","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeightProp","getRowHeight","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","hydrateRowsMeta","densityFactor","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","_rowsHeightLookup$cur3","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","cellWidth","columnPositions","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","getSkeletonUtilityClass","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","waveKeyframe","_templateObject2","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","getUnit","radiusValue","toUnitless","marginBottom","_templateObject3","_templateObject4","Skeleton","_props$animation","usePreviousProps","getBadgeUnstyledUtilityClass","BadgeUnstyled","_componentsProps$root","_componentsProps$badg","_props$components","_props$max","maxProp","_props$showZero","showZero","_useBadge","parameters","badgeContentProp","badgeContent","_parameters$invisible","invisible","invisibleProp","_parameters$max","_parameters$showZero","prevProps","_ref$max","displayValue","useBadge","badge","Root","appendOwnerState","Badge","badgeProps","shouldSpreadAdditionalProps","Slot","isHostComponent","getBadgeUtilityClass","badgeClasses","BadgeRoot","verticalAlign","flexShrink","BadgeBadge","anchorOrigin","vertical","horizontal","overlap","alignContent","RADIUS_STANDARD","easing","easeInOut","enteringScreen","contrastText","RADIUS_DOT","leavingScreen","_componentsProps$root2","_componentsProps$badg2","_props$anchorOrigin","anchorOriginProp","_props$overlap","overlapProp","colorProp","_props$invisible","variantProp","_ref10$color","_ref10$overlap","_ref10$anchorOrigin","_ref10$variant","_ownerState$classes","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","autoFocus","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","_column$sortingOrder","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","GridOverlayRoot","GridOverlay","GridLoadingOverlay","CircularProgress","GridNoRowsOverlay","GridPaginationRoot","TablePagination","tablePaginationClasses","selectLabel","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","rowsPerPageOptions","rowsPerPage","onRowsPerPageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","_props$slotProps","slotProps","TrapFocus","disableEnforceFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","_","filterFormDeleteIcon","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","_props$linkOperators","linkOperators","columnsSort","_props$deleteIconProp","deleteIconProps","_props$linkOperatorIn","linkOperatorInputProps","_props$operatorInputP","operatorInputProps","_props$columnInputPro","columnInputProps","_props$valueInputProp","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","sx","InputLabel","labelId","GridFilterPanel","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","startIcon","baseButton","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","defaultSearchPredicate","searchValue","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","handleClickAway","modifiers","enabled","phase","effect","elevation","EmptyCell","GridRow","refProp","styleProp","renderedColumns","containerWidth","_props$isLastVisible","onDoubleClick","onMouseEnter","onMouseLeave","ariaRowIndex","editing","ResizeObserver","resizeObserver","borderBoxSize","blockSize","contentRect","observe","disconnect","publish","propHandler","nodeType","publishClick","getCell","classNames","disableDragEvents","disableColumnReorder","rowReordering","_rootProps$classes","editCellState","_rootProps$classes2","updatedRow","getCellClassName","showRightBorder","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowSpacingType","property","rowClassNames","getRowClassName","_currentPage$range","randomNumber","cells","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","_cellColSpanInfo$cell","contentWidth","SkeletonCell","emptyCellWidth","eventHandlers","GridColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","MUICheckbox","MUITextField","MUIFormControl","MUISelect","BaseSwitch","MUISwitch","MUIButton","BaseTooltip","MUITooltip","MUIPopper","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","focusableElement","elementToFocus","scrollPosition","managesOwnFocus","draggableEventHandlers","valueString","renderChildren","ColumnHeaderFilterIconButton","counter","icon","toggleFilter","_gridPreferencePanelS","iconButton","enterDelay","baseTooltip","ColumnMenu","searchInputRef","setSearchValue","_props$searchPredicat","searchPredicate","_props$autoFocusSearc","autoFocusSearchField","sortedColumns","toggleAllColumns","handleSearchValueChange","currentColumns","searchValueToCheck","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","FormControlLabel","control","baseSwitch","DATA_GRID_FORCED_PROPS","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","itemOffset","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","_props$renderZoneMinC","renderZoneMinColumnIndex","_props$renderZoneMaxC","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","lastColumnIndex","_scrollPosition$curre","_getRenderableIndexes","_getRenderableIndexes2","updateRenderZonePosition","nextRenderContext","_getRenderableIndexes3","_getRenderableIndexes4","_getRenderableIndexes5","updateRenderContext","context1","context2","_getRenderableIndexes7","_getRenderableIndexes8","initialRenderContext","_scrollPosition$curre2","handleScroll","_event$currentTarget","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","ReactDOM","handleWheel","handleTouchMove","needsHorizontalScrollbar","contentSize","shouldExtendContent","rootStyle","overflowX","overflowY","getRenderContext","getRows","_params$minFirstColum","_params$maxLastColumn","_params$availableSpac","availableSpace","_params$rowIndexOffse","rowIndexOffset","_params$position","_getRenderableIndexes9","_getRenderableIndexes10","renderedRows","_getRenderableIndexes11","_getRenderableIndexes12","initialFirstColumnToRender","lastColumnToRender","_currentPage$range5","_renderedRows$i","lastVisibleRowIndex","_ref$style","onScroll","onWheel","onTouchMove","getContentProps","_ref3$style","getRenderZoneProps","DataGridVirtualScroller","_useGridVirtualScroll","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","_props$side","side","Right","resizing","stopClick","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","separatorSide","isDraggable","headerComponent","_props$columnMenuIcon","columnMenuIconButton","_props$columnMenu","_props$columnTitleIco","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","disableHeaderSeparator","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","ariaSort","columnMenuState","draggableContainer","draggable","titleContainer","titleContainerContent","GridColumnHeaderItem","_column$headerName","filterItemsCounter","extendRowFullWidth","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onMouseOut","onDragStart","onDragEnd","handleExited","columnHeaderFilterIconButton","hideSortIcons","elementId","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","_group$headerName","_group$description","_group$headerAlign","renderHeaderGroup","renderParams","showColumnBorder","GridColumnHeaderRow","columnHeaderRow","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","scrollDirection","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","clientX","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","GridColumnHeadersInner","DataGridColumnHeaders","_useGridColumnHeaders","innerRefProp","_props$minColumnIndex","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","_ref$renderContext","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","_ref2$renderContext","_ref2$minFirstColumn","_ref2$maxLastColumn","getParents","getColumnHeaders","columnsToRender","isFirstColumn","hasTabbableElement","getColumnGroupHeaders","headerToRender","initialHeader","leftOverflow","firstColumnToRenderGroup","_visibleColumns$first","_visibleColumns$first2","firstColumnToRenderGroupParents","_visibleColumns$first3","_visibleColumns$colum","_visibleColumns$colum2","_column$computedWidth","_column$computedWidth2","groupParents","_column$computedWidth3","depthInfo","aggregated","_column$computedWidth7","_column$computedWidth5","_column$computedWidth4","_column$computedWidth6","lastItem","lastColumnToRenderGroup","_visibleColumns$colum3","_visibleColumns$colum4","_visibleColumns$colum5","_column$computedWidth8","elements","depthIndex","groupIndex","getInnerProps","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","PropTypes","bool","arrayOf","isRequired","oneOf","any","warnIfFocusStateIsNotSynced","oneOfType","getDetailPanelContent","getSwitchUtilityClass","SwitchRoot","edge","colorAdjust","thumb","switchBase","SwitchSwitchBase","SwitchBase","common","white","grey","shortest","track","active","SwitchTrack","black","SwitchThumb","Switch","_props$edge","composedClasses","checkedIcon"],"mappings":"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","file":"static/js/18.832766b0.chunk.js","sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = cacheKey => {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n\n  return contextValue;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityHeaderGroupingMaxDepthSelector = createSelector(gridDensitySelector, density => density.headerGroupingMaxDepth);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);\nexport const gridDensityTotalHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight * (1 + density.headerGroupingMaxDepth));","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);\n/**\n * @ignore - do not document.\n */\n\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsSelector = createSelector(gridAdditionalRowGroupsSelector, additionalRowGroups => additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  return ((pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    ownerState: rootProps,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const errorState = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: errorState != null,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, errorState, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc, root) {\n    if (!root.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          container = root.constructor.name === 'ShadowRoot' ? root : doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      container.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc, element.getRootNode());\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Function responsible for rendering children.\n   * @param {AutoSizerSize} size The grid's size.\n   * @returns {React.ReactNode} The children to render.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: totalHeaderHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - totalHeaderHeight : 'auto',\n          marginTop: totalHeaderHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    if (props.error) {\n      handleError({\n        error: props.error\n      });\n    } else {\n      handleError(null);\n    }\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n\n  if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n    return true;\n  }\n\n  if (!element) {\n    return false;\n  }\n\n  if ((element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment3;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    var _rootProps$experiment2;\n\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n\n    if (column.valueParser && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange, (_rootProps$experiment3 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment3.newEditingApi]);\n  const meta = apiRef.current.unstable_getEditCellMeta ? apiRef.current.unstable_getEditCellMeta(id, field) : {};\n  React.useEffect(() => {\n    if (meta.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta.changeReason, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]),\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\n\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridBooleanCellRaw = props => {\n  const {\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// We need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\n\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && event.ctrlKey === false && event.metaKey === false;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange,\n    initialOpen = rootProps.editMode === GridEditModes.Cell\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState5, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _props$initialState$c2, _props$initialState4, _props$initialState4$;\n\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const shouldExportColumnVisibilityModel = // Always export if the `exportOnlyDirtyModels` property is activated\n      !context.exportOnlyDirtyModels || // Always export if the model is controlled\n      props.columnVisibilityModel != null || // Always export if the model has been initialized\n      // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n      Object.keys((_props$initialState$c2 = (_props$initialState4 = props.initialState) == null ? void 0 : (_props$initialState4$ = _props$initialState4.columns) == null ? void 0 : _props$initialState4$.columnVisibilityModel) != null ? _props$initialState$c2 : {}).length > 0 || // Always export if the model is not empty\n      Object.keys(columnVisibilityModelToExport).length > 0;\n\n      if (shouldExportColumnVisibilityModel) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState5 = props.initialState) == null ? void 0 : _props$initialState5.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n/**\n * A function used to process headerClassName params.\n */","import { createSelector } from '../../../utils/createSelector';\n\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsLookupSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping.lookup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector } from './gridColumnGroupsSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport function hasGroupPath(lookupElement) {\n  return lookupElement.groupPath !== undefined;\n}\n\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplet) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplet[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurrs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplet[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n\n    unwrappedGroupingModelToComplet[columnGroupNode.field] = parents;\n    return;\n  }\n\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplet);\n  });\n};\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\n\n\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\n\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n\n    const {\n      groupId,\n      children\n    } = node,\n          other = _objectWithoutPropertiesLoose(node, _excluded);\n\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n\n    const subTreeLookup = createGroupLookup(children);\n\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\n\nexport const columnGroupsStateInitializer = (state, props) => {\n  var _props$columnGrouping;\n\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      groupCollapsedModel: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\n\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _columnLookup$field$g, _columnLookup$field;\n\n    const columnLookup = gridColumnLookupSelector(apiRef);\n    return (_columnLookup$field$g = (_columnLookup$field = columnLookup[field]) == null ? void 0 : _columnLookup$field.groupPath) != null ? _columnLookup$field$g : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'GridColumnGroupingApi');\n  /**\n   * EFFECTS\n   */\n  // The effect does not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    var _props$experimentalFe, _props$columnGrouping2;\n\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return;\n    }\n\n    const groupLookup = createGroupLookup((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnGrouping: _extends({}, state.columnGrouping, {\n        lookup: groupLookup\n      })\n    }));\n  }, [apiRef, props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { unwrapGroupingColumnModel } from '../columnGrouping/useGridColumnGrouping';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight, newMaxDepth) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => {\n  // TODO: think about improving this initialization. Could it be done in the useColumn initializer?\n  // TODO: manage to remove ts-ignore\n  let maxDepth;\n\n  if (props.columnGroupingModel == null || Object.keys(props.columnGroupingModel).length === 0) {\n    maxDepth = 0;\n  } else {\n    const unwrappedGroupingColumnModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    const columnsState = state.columns;\n    const visibleColumns = columnsState.all.filter(field => columnsState.columnVisibilityModel[field] !== false);\n\n    if (visibleColumns.length === 0) {\n      maxDepth = 0;\n    } else {\n      maxDepth = Math.max(...visibleColumns.map(field => {\n        var _unwrappedGroupingCol, _unwrappedGroupingCol2;\n\n        return (_unwrappedGroupingCol = (_unwrappedGroupingCol2 = unwrappedGroupingColumnModel[field]) == null ? void 0 : _unwrappedGroupingCol2.length) != null ? _unwrappedGroupingCol : 0;\n      }));\n    }\n  }\n\n  return _extends({}, state, {\n    density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight, maxDepth)\n  });\n};\nexport const useGridDensity = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const maxDepth = visibleColumns.length > 0 ? Math.max(...visibleColumns.map(column => {\n    var _column$groupPath$len, _column$groupPath;\n\n    return (_column$groupPath$len = (_column$groupPath = column.groupPath) == null ? void 0 : _column$groupPath.length) != null ? _column$groupPath$len : 0;\n  })) : 0;\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight, newMaxDepth = maxDepth) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight, newMaxDepth);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight, maxDepth]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight, maxDepth);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight, maxDepth]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    rowNode,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n\n  if (rowNode.position === 'footer') {\n    return null;\n  }\n\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n\n  if (rowNode.isPinned) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => {\n    var _rowTree$id$position;\n\n    return ((_rowTree$id$position = rowTree[id].position) != null ? _rowTree$id$position : 'body') === 'body';\n  });\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n      _excluded2 = [\"hideMenu\", \"options\"],\n      _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\n\nfunction getChromeVersion() {\n  const raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n  return raw ? parseInt(raw[2], 10) : null;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]); // TODO move outside of this scope and remove React.useCallback\n\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n\n    const printDoc = printWindow.contentDocument;\n\n    if (!printDoc) {\n      return;\n    }\n\n    const totalHeaderHeight = gridDensityTotalHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const chromeVersion = getChromeVersion();\n\n    if (chromeVersion && chromeVersion >= 108) {\n      // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n      gridClone.style.contain = 'size';\n    }\n\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + totalHeaderHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow); // In test env, run the all pipeline without waiting for loading\n\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\n\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.columnField || !filterItem.operatorValue) {\n    return null;\n  }\n\n  const column = apiRef.current.getColumn(filterItem.columnField);\n\n  if (!column) {\n    return null;\n  }\n\n  let parsedValue;\n\n  if (column.valueParser) {\n    var _filterItem$value;\n\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n\n  const filterOperators = column.filterOperators;\n\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n  }\n\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n\n  const fn = rowId => {\n    const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n    return applyFilterOnRow(cellParams);\n  };\n\n  return {\n    fn,\n    item: newFilterItem\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const resultPerItemId = {};\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers;\n    filteredAppliers.forEach(applier => {\n      resultPerItemId[applier.item.id] = applier.fn(rowId);\n    });\n    return resultPerItemId;\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = []\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n\n  if (sanitizedQuickFilterValues.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    });\n    const quickFilterValueResult = {};\n    sanitizedQuickFilterValues.forEach((value, index) => {\n      const isPassing = columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      });\n      quickFilterValueResult[value] = isPassing;\n    });\n    return quickFilterValueResult;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return (rowId, shouldApplyFilter) => ({\n    passingFilterItems: isRowMatchingFilterItems && isRowMatchingFilterItems(rowId, shouldApplyFilter),\n    passingQuickFilterValues: isRowMatchingQuickFilter && isRowMatchingQuickFilter(rowId, shouldApplyFilter)\n  });\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$linkOper;\n\n  const cleanedFilterItems = filterModel.items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  const cleanedAllFilterItemResults = allFilterItemResults.filter(result => result != null);\n  const cleanedAllQuickFilterResults = allQuickFilterResults.filter(result => result != null); // Defaultize operators\n\n  const quickFilterLogicOperator = (_filterModel$quickFil = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil : getDefaultGridFilterModel().quickFilterLogicOperator;\n  const linkOperator = (_filterModel$linkOper = filterModel.linkOperator) != null ? _filterModel$linkOper : getDefaultGridFilterModel().linkOperator; // get result for filter items model\n\n  if (cleanedAllFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedAllFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n\n    if (linkOperator === GridLinkOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  } // get result for quick filter model\n\n\n  if (cleanedAllQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedAllQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n\n        if (item.value !== undefined) {\n          return true;\n        }\n\n        const column = apiRef.current.getColumn(item.columnField);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operatorValue);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue; // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n\n        if (requiresFilterValue) {\n          return false;\n        }\n\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.filterModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.filter) == null ? void 0 : _props$initialState2$.filterModel) != null || // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.filter) == null ? void 0 : _props$initialState3$.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        let isRowPassing;\n\n        if (typeof rowId === 'string' && rowId.startsWith('auto-generated-group-footer')) {\n          isRowPassing = true;\n        } else {\n          const {\n            passingFilterItems,\n            passingQuickFilterValues\n          } = params.isRowMatchingFilters(rowId);\n          isRowPassing = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, apiRef);\n        }\n\n        filteredRowsLookup[rowId] = isRowPassing;\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate(); // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\n\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.unstable_moveFocusToRelativeCell()\n   */\n\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    } // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n\n\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex].id;\n  }, [currentPageRows]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // TODO v6: Remove Enter case because `cellNavigationKeyDown` is not fired by the new editing API\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null && !node.isPinned).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null || // Always export if the panel is opened\n    preferencePanelToExport.open;\n\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !params.rowNode.isPinned && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startCellEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startCellEditModeParams.deleteValue = true;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id, _editingState$id$fiel;\n\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id$fiel = _editingState$id[field]) != null && _editingState$id$fiel.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        } // The row may already changed its mode\n\n\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startRowEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startRowEditModeParams.deleteValue = !!field;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      let newValue = apiRef.current.getCellValue(id, field);\n\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return {\n      changeReason: editingState[id][field].changeReason\n    };\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector, gridRowsIdToIdLookupSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {// Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.unstable_caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange(cache, true);\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqueUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqueUpdates.has(id)) {\n        uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n      } else {\n        uniqueUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      rowCountPropBeforePartialUpdates: prevCache.rowCountPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqueUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    if (newRows.length === 0) {\n      return;\n    }\n\n    const allRows = gridRowIdsSelector(apiRef);\n    const updatedRows = [...allRows];\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    const tree = gridRowTreeSelector(apiRef);\n\n    const updatedIdRowsLookup = _extends({}, idRowsLookup);\n\n    const updatedIdToIdLookup = _extends({}, idToIdLookup);\n\n    const updatedTree = _extends({}, tree);\n\n    const newRowEntries = newRows.map(newRowModel => {\n      const rowId = getRowIdFromRowModel(newRowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      return {\n        id: rowId,\n        model: newRowModel\n      };\n    });\n    newRowEntries.forEach((row, index) => {\n      const [replacedRowId] = updatedRows.splice(firstRowToRender + index, 1, row.id);\n      delete updatedIdRowsLookup[replacedRowId];\n      delete updatedIdToIdLookup[replacedRowId];\n      delete updatedTree[replacedRowId];\n    });\n    newRowEntries.forEach(row => {\n      const rowTreeNodeConfig = {\n        id: row.id,\n        parent: null,\n        depth: 0,\n        groupingKey: null,\n        groupingField: null\n      };\n      updatedIdRowsLookup[row.id] = row.model;\n      updatedIdToIdLookup[row.id] = row.id;\n      updatedTree[row.id] = rowTreeNodeConfig;\n    });\n    apiRef.current.unstable_caches.rows.idRowsLookup = updatedIdRowsLookup;\n    apiRef.current.unstable_caches.rows.idToIdLookup = updatedIdToIdLookup;\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.setState(state => {\n      const newRowsState = {\n        idRowsLookup: updatedIdRowsLookup,\n        idToIdLookup: updatedIdToIdLookup,\n        tree: updatedTree,\n        ids: updatedRows\n      };\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, newRowsState, {\n          groupingResponseBeforeRowHydration: _extends({}, state.rows.groupingResponseBeforeRowHydration, newRowsState)\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren,\n    unstable_replaceRows: replaceRows\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates === props.rowCount; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null && // pinned row can be unpinned\n    !previousTree[rowId].isPinned) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\n\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\n\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    pagination,\n    paginationMode,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if ((rowNode == null ? void 0 : rowNode.position) === 'footer' || rowNode != null && rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    const rowNode = apiRef.current.getRowNode(params.id);\n\n    if (rowNode.isPinned) {\n      return;\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'rowClick', handleRowClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // props.isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(id);\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$;\n\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.sortModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.sorting) == null ? void 0 : _props$initialState2$.sortModel) != null || // Export if the model is not empty\n    sortModelToExport.length > 0;\n\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.sorting) == null ? void 0 : _props$initialState3$.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n\n    if (!params.sortRowList) {\n      const bodyRowIds = [];\n      const footerRowIds = [];\n      gridRowIdsSelector(apiRef).forEach(rowId => {\n        if (rowTree[rowId].isPinned) {\n          return;\n        }\n\n        if (rowTree[rowId].position === 'footer') {\n          footerRowIds.push(rowId);\n        } else {\n          bodyRowIds.push(rowId);\n        }\n      });\n      return [...bodyRowIds, ...footerRowIds];\n    }\n\n    const bodyRows = [];\n    const footerRowIds = [];\n    Object.values(rowTree).forEach(rowNode => {\n      if (rowNode.isPinned) {\n        return;\n      }\n\n      if (rowNode.position === 'footer') {\n        footerRowIds.push(rowNode.id);\n      } else {\n        bodyRows.push(rowNode);\n      }\n    });\n    return [...params.sortRowList(bodyRows), ...footerRowIds];\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce, capitalize } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.baseCenter;\n\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n\n      const existingBaseSizes = Object.entries(sizes).reduce((acc, [key, size]) => {\n        if (/^base[A-Z]/.test(key)) {\n          acc[key] = size;\n        }\n\n        return acc;\n      }, {}); // We use an object to make simple to check if a height is already added or not\n\n      const initialHeights = _extends({}, existingBaseSizes, {\n        baseCenter: baseRowHeight\n      });\n\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      Object.entries(processedSizes).forEach(([size, value]) => {\n        if (/^base[A-Z]/.test(size)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      });\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    disableDragEvents,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n\n  };\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n      return /*#__PURE__*/_jsx(\"div\", {\n        title: valueString,\n        className: classes.content,\n        children: valueString\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  disableDragEvents: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridColumnGroupingPreProcessors } from '../hooks/features/columnGrouping/useGridColumnGroupingPreProcessors';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridColumnGroupingPreProcessors(apiRef, props);\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { unwrapGroupingColumnModel, hasGroupPath } from './useGridColumnGrouping';\nexport const useGridColumnGroupingPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const addHeaderGroups = React.useCallback(columnsState => {\n    var _props$experimentalFe;\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return columnsState;\n    }\n\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    columnsState.all.forEach(field => {\n      var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n\n      const newGroupPath = (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n      const lookupElement = columnsState.lookup[field];\n\n      if (hasGroupPath(lookupElement) && isDeepEqual(newGroupPath, lookupElement == null ? void 0 : lookupElement.groupPath)) {\n        // Avoid modifying the pointer to allow shadow comparison in https://github.com/mui/mui-x/blob/f90afbf10a1264ee8b453d7549dd7cdd6110a4ed/packages/grid/x-data-grid/src/hooks/features/columns/gridColumnsUtils.ts#L446:L453\n        return;\n      }\n\n      columnsState.lookup[field] = _extends({}, columnsState.lookup[field], {\n        groupPath: (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod2 : []\n      });\n    });\n    return columnsState;\n  }, [props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addHeaderGroups);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityTotalHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - totalHeaderHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: viewportOuterSize.width,\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, totalHeaderHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridSkeletonCell(props) {\n  const {\n    align,\n    width,\n    contentWidth\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import * as React from 'react';\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUnstyledUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base/react-badge/)\n *\n * API:\n *\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\n */\n\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  var _componentsProps$root, _componentsProps$badg;\n\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root, {\n    ref,\n    className: clsx(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, _extends({}, componentsProps.badge, {\n    className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import { isHostComponent } from '@mui/base';\n\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\n\nexport default shouldSpreadAdditionalProps;","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SortGridMenuItems(props) {\n  var _column$sortingOrder;\n\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes(null) ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }) : null, sortingOrder.includes('asc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }) : null, sortingOrder.includes('desc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    }) : null]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 4,\n  // should be above pinned columns, pinned rows and detail panel\n  width: '100%',\n  height: '100%',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n    className,\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(TrapFocus, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  })\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n      _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n\n  const {\n    InputComponentProps\n  } = valueInputProps,\n        valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\n\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\n\nfunction GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n      const newModel = _extends({}, currentModel);\n\n      columns.forEach(col => {\n        if (col.hideable) {\n          if (isVisible) {\n            // delete the key from the model instead of setting it to `true`\n            delete newModel[col.field];\n          } else {\n            newModel[col.field] = false;\n          }\n        }\n      });\n      return apiRef.current.setColumnVisibilityModel(newModel);\n    } // TODO v6: Remove\n\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return sortedColumns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return sortedColumns.filter(column => searchPredicate(column, searchValueToCheck));\n  }, [sortedColumns, searchValue, searchPredicate]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocusSearchField: PropTypes.bool,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  }),\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"error\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    error\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: (error == null ? void 0 : error.message) || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridSkeletonCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  disableIgnoreModificationsIfProcessingProps: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, rootProps, {\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\n\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\n\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\n\nconst areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.unstable_getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerDimensions.width, columnPositions);\n    }\n\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(params => {\n    setContainerDimensions({\n      width: params.width,\n      height: params.height\n    });\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n\n    setRenderContext(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContext, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5, _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: rowIndexOffset + ((currentPage == null ? void 0 : (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth > containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"disableHeaderSeparator\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n    classes,\n    columnMenuOpen,\n    colIndex,\n    height,\n    isResizing,\n    sortDirection,\n    hasFocus,\n    tabIndex,\n    separatorSide,\n    isDraggable,\n    headerComponent,\n    description,\n    width,\n    columnMenuIconButton = null,\n    columnMenu = null,\n    columnTitleIconButtons = null,\n    headerClassName,\n    label,\n    resizable,\n    draggableContainerProps,\n    columnHeaderSeparatorProps,\n    disableHeaderSeparator\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), !disableHeaderSeparator && /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _rootProps$components, _column$sortingOrder, _rootProps$components2, _column$headerName;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: column.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.components.ColumnMenu,\n    contentComponentProps: (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnMenu,\n    onExited: handleExited\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: column.description,\n    elementId: column.field,\n    width: column.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!column.resizable,\n    \"data-field\": column.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId' + ''];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showRightBorder,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'withBorder', showColumnBorder && 'columnHeader--showColumnBorder', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnGroupHeader(props) {\n  var _apiRef$current$getRo, _columnGroupsLookup$g;\n\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    isLastColumn,\n    extendRowFullWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = {\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  };\n\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n  const showColumnBorder = rootProps.showColumnRightBorder;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, {\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: -1,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    disableHeaderSeparator: true\n  });\n}\n\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector, gridDensityHeaderGroupingMaxDepthSelector, gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO: add the possibility to switch this value if needed for customization\nconst MERGE_EMPTY_CELLS = true;\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n\n  const getParents = (path = [], depth) => path.slice(0, depth + 1);\n\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      maxLastColumn\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _visibleColumns$first, _visibleColumns$first2, _visibleColumns$first3;\n\n      // Initialize the header line with a grouping item containing all the columns on the left of the virtualization which are in the same group as the first group to render\n      const initialHeader = [];\n      let leftOverflow = 0;\n      let columnIndex = firstColumnToRender - 1;\n      const firstColumnToRenderGroup = (_visibleColumns$first = visibleColumns[firstColumnToRender]) == null ? void 0 : (_visibleColumns$first2 = _visibleColumns$first.groupPath) == null ? void 0 : _visibleColumns$first2[depth]; // The array of parent is used to manage empty grouping cell\n      // When two empty grouping cell are next to each other, we merge them if the belong to the same group.\n\n      const firstColumnToRenderGroupParents = getParents((_visibleColumns$first3 = visibleColumns[firstColumnToRender]) == null ? void 0 : _visibleColumns$first3.groupPath, depth);\n\n      while (firstColumnToRenderGroup !== null && columnIndex >= minColumnIndex && (_visibleColumns$colum = visibleColumns[columnIndex]) != null && _visibleColumns$colum.groupPath && isDeepEqual(getParents((_visibleColumns$colum2 = visibleColumns[columnIndex]) == null ? void 0 : _visibleColumns$colum2.groupPath, depth), firstColumnToRenderGroupParents)) {\n        var _visibleColumns$colum, _visibleColumns$colum2, _column$computedWidth;\n\n        const column = visibleColumns[columnIndex];\n        leftOverflow += (_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0;\n\n        if (initialHeader.length === 0) {\n          var _column$computedWidth2;\n\n          initialHeader.push({\n            width: (_column$computedWidth2 = column.computedWidth) != null ? _column$computedWidth2 : 0,\n            fields: [column.field],\n            groupId: firstColumnToRenderGroup,\n            groupParents: firstColumnToRenderGroupParents,\n            colIndex: columnIndex\n          });\n        } else {\n          var _column$computedWidth3;\n\n          initialHeader[0].width += (_column$computedWidth3 = column.computedWidth) != null ? _column$computedWidth3 : 0;\n          initialHeader[0].fields.push(column.field);\n          initialHeader[0].colIndex = columnIndex;\n        }\n\n        columnIndex -= 1;\n      }\n\n      const depthInfo = renderedColumns.reduce((aggregated, column, i) => {\n        var _column$computedWidth7;\n\n        const lastItem = aggregated[aggregated.length - 1];\n\n        if (column.groupPath && column.groupPath.length > depth) {\n          var _column$computedWidth5;\n\n          if (lastItem && lastItem.groupId === column.groupPath[depth]) {\n            var _column$computedWidth4;\n\n            // Merge with the previous columns\n            return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n              width: lastItem.width + ((_column$computedWidth4 = column.computedWidth) != null ? _column$computedWidth4 : 0),\n              fields: [...lastItem.fields, column.field]\n            })];\n          } // Create a new grouping\n\n\n          return [...aggregated, {\n            groupId: column.groupPath[depth],\n            groupParents: getParents(column.groupPath, depth),\n            width: (_column$computedWidth5 = column.computedWidth) != null ? _column$computedWidth5 : 0,\n            fields: [column.field],\n            colIndex: firstColumnToRender + i\n          }];\n        }\n\n        if (MERGE_EMPTY_CELLS && lastItem && lastItem.groupId === null && isDeepEqual(getParents(column.groupPath, depth), lastItem.groupParents)) {\n          var _column$computedWidth6;\n\n          // We merge with previous column\n          return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n            width: lastItem.width + ((_column$computedWidth6 = column.computedWidth) != null ? _column$computedWidth6 : 0),\n            fields: [...lastItem.fields, column.field]\n          })];\n        } // We create new empty cell\n\n\n        return [...aggregated, {\n          groupId: null,\n          groupParents: getParents(column.groupPath, depth),\n          width: (_column$computedWidth7 = column.computedWidth) != null ? _column$computedWidth7 : 0,\n          fields: [column.field],\n          colIndex: firstColumnToRender + i\n        }];\n      }, initialHeader);\n      columnIndex = lastColumnToRender;\n      const lastColumnToRenderGroup = depthInfo[depthInfo.length - 1].groupId;\n\n      while (lastColumnToRenderGroup !== null && columnIndex < maxLastColumn && (_visibleColumns$colum3 = visibleColumns[columnIndex]) != null && _visibleColumns$colum3.groupPath && ((_visibleColumns$colum4 = visibleColumns[columnIndex]) == null ? void 0 : (_visibleColumns$colum5 = _visibleColumns$colum4.groupPath) == null ? void 0 : _visibleColumns$colum5[depth]) === lastColumnToRenderGroup) {\n        var _visibleColumns$colum3, _visibleColumns$colum4, _visibleColumns$colum5, _column$computedWidth8;\n\n        const column = visibleColumns[columnIndex];\n        depthInfo[depthInfo.length - 1].width += (_column$computedWidth8 = column.computedWidth) != null ? _column$computedWidth8 : 0;\n        depthInfo[depthInfo.length - 1].fields.push(column.field);\n        columnIndex += 1;\n      }\n\n      headerToRender.push({\n        leftOverflow,\n        elements: [...depthInfo]\n      });\n    }\n\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n            maxDepth: headerToRender.length,\n            height: headerHeight\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, modification to a cell will not be discarded if the mode is changed from \"edit\" to \"view\" while processing props.\n   * @default false\n   */\n  disableIgnoreModificationsIfProcessingProps: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    columnGrouping: PropTypes.bool,\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"sourceRoot":""}