{"version":3,"sources":["app/views/sessions/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","enqueueSnackbar","useSnackbar","theme","useTheme","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useAuth","useAuth","login","user","useEffect","console","log","variant","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","t0","stop","_x","apply","arguments","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","Typography","align","paddingTop","p","sx","minWidth","src","width","alt","Formik","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","onBlur","value","onChange","helperText","error","Boolean","mb","gap","Checkbox","checked","Paragraph","NavLink","to","style","color","palette","primary","main","LoadingButton","my"],"mappings":"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","file":"static/js/31.dfa61b62.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Card, Checkbox, Grid, TextField, Typography } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { Paragraph } from 'app/components/Typography';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Formik } from 'formik';\r\nimport { useState, useEffect } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n  background: '#1A2038',\r\n  minHeight: '100% !important',\r\n  '& .card': {\r\n    maxWidth: 800,\r\n    minHeight: 400,\r\n    margin: '1rem',\r\n    display: 'flex',\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n// inital login credentials\r\nconst initialValues = {\r\n  email: 'lawrence.kasonde@moe.gov.zm',\r\n  password: 'Lusaka@123',\r\n  remember: true,\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, 'Password must be 6 character length')\r\n    .required('Password is required!'),\r\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\r\n});\r\n\r\nconst JwtLogin = () => {\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login, user } = useAuth();\r\n  useEffect(() => {\r\n    console.log(user)\r\n    if(!user) {\r\n      enqueueSnackbar('Please login', { variant: 'info'})\r\n    } else {\r\n        navigate('/dashboard/default');\r\n        enqueueSnackbar('Successfully logged in', { variant: 'success'})\r\n      }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[user])\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.email, values.password);\r\n      navigate('/dashboard/default');\r\n      enqueueSnackbar('Successfully logged in', { variant: 'success'})\r\n    } catch (e) {\r\n      setLoading(false);\r\n      enqueueSnackbar('Incorrect email or password', { variant: 'error'})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JWTRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n          <Typography variant=\"h4\" align='center' paddingTop={1.5} >\r\n            Ministry of Education\r\n            <Typography variant=\"h5\">\r\n            Global Fund MIS\r\n            </Typography></Typography>\r\n            <JustifyBox p={4} height=\"85%\" sx={{ minWidth: 320 }}>\r\n              <img src=\"/assets/images/illustrations/zambia-coats-of-arm.jpg\" width=\"85%\" alt=\"\" />\r\n            </JustifyBox>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n          <Typography variant=\"h5\" align='center' paddingTop={1.5}>\r\n            SIGN IN\r\n            </Typography>;\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      <FlexBox gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox>\r\n\r\n                      <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}\r\n                      >\r\n                        Forgot password?\r\n                      </NavLink>\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      fullWidth variant=\"contained\"\r\n                      sx={{ my: 2 }}\r\n                    >\r\n                      Login\r\n                    </LoadingButton>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default JwtLogin;\r\n"],"sourceRoot":""}