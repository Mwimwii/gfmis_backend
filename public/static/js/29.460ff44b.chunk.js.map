{"version":3,"sources":["app/views/pages/dataEntry/Transfer/Tansfersform.jsx","app/views/pages/dataEntry/Transfer/Transfer.jsx"],"names":["TextField","styled","TextValidator","width","marginBottom","TransferForm","_useState","useState","date","Date","_useState2","_slicedToArray","state","setState","useEffect","ValidatorForm","addValidationRule","value","password","removeValidationRule","handleChange","event","persist","_objectSpread","_defineProperty","target","name","firstName","lastName","role","mobile","gender","email","_jsx","children","_jsxs","onSubmit","onError","Grid","container","spacing","item","lg","md","sm","xs","sx","mt","type","label","onChange","validators","errorMessages","RadioGroup","row","mb","FormControlLabel","labelPlacement","control","Radio","color","Button","variant","Span","textTransform","Container","_ref","_ref2","theme","margin","breakpoints","down","AppForm","Stack","SimpleCard","title"],"mappings":"sQAYQA,EAAYC,YAAOC,gBAAPD,EAAsB,iBAAO,CAC7CE,MAAO,OACPC,aAAc,WAoIDC,EAjIM,WACnB,IAAAC,EAA0BC,mBAAS,CAAEC,KAAM,IAAIC,OAASC,EAAAC,YAAAL,EAAA,GAAjDM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,qBAAU,WAMR,OALAC,gBAAcC,kBAAkB,mBAAmB,SAACC,GAClD,OAAIA,IAAUL,EAAMM,YAIf,kBAAMH,gBAAcI,qBAAqB,sBAC/C,CAACP,EAAMM,WAEV,IAKME,EAAe,SAACC,GACpBA,EAAMC,UACNT,EAAQU,wBAAC,GAAKX,GAAK,GAAAY,YAAA,GAAGH,EAAMI,OAAOC,KAAOL,EAAMI,OAAOR,UAKvDU,EAOEf,EAPFe,UACAC,EAMEhB,EANFgB,SACAC,EAKEjB,EALFiB,KACAC,EAIElB,EAJFkB,OACAZ,EAGEN,EAHFM,SACAa,EAEEnB,EAFFmB,OACAC,EACEpB,EADFoB,MAGF,OACEC,cAAA,OAAAC,SACEC,eAACpB,gBAAa,CAACqB,SAvBE,SAACf,KAuBqBgB,QAAS,kBAAM,MAAKH,SAAA,CACzDC,eAACG,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEN,SAAA,CACzBC,eAACG,IAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAIb,SAAA,CAErDD,cAACjC,EAAS,CACRgD,KAAK,OACLtB,KAAK,YACLuB,MAAM,aACNC,SAAU9B,EACVH,MAAOU,GAAa,GACpBwB,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEhBnB,cAACjC,EAAS,CACVgD,KAAK,OACLtB,KAAK,WACLuB,MAAM,YACNC,SAAU9B,EACVH,MAAOW,GAAY,GACnBuB,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElBnB,cAACjC,EAAS,CACRgD,KAAK,QACLtB,KAAK,QACLuB,MAAM,QACNhC,MAAOe,GAAS,GAChBkB,SAAU9B,EACV+B,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,yBAA0B,wBAG5CnB,cAACjC,EAAS,CACRgD,KAAK,OACLtB,KAAK,OACLuB,MAAM,OACNC,SAAU9B,EACVH,MAAOY,GAAQ,GACfsB,WAAY,CAAC,YACbC,cAAe,CAAC,+BAIpBjB,eAACG,IAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,CAAEC,GAAI,GAAIb,SAAA,CACrDD,cAACjC,EAAS,CACRgD,KAAK,OACLtB,KAAK,SACLT,MAAOa,GAAU,GACjBmB,MAAM,gBACNC,SAAU9B,EACV+B,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElBnB,cAACjC,EAAS,CACR0B,KAAK,WACLsB,KAAK,WACLC,MAAM,WACNhC,MAAOC,GAAY,GACnBgC,SAAU9B,EACV+B,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElBjB,eAACkB,IAAU,CACTC,KAAG,EACH5B,KAAK,SACLoB,GAAI,CAAES,GAAI,GACVtC,MAAOc,GAAU,GACjBmB,SAAU9B,EAAac,SAAA,CAEvBD,cAACuB,IAAgB,CACfvC,MAAM,OACNgC,MAAM,OACNQ,eAAe,MACfC,QAASzB,cAAC0B,IAAK,CAACC,MAAM,cAGxB3B,cAACuB,IAAgB,CACfvC,MAAM,SACNgC,MAAM,SACNQ,eAAe,MACfC,QAASzB,cAAC0B,IAAK,CAACC,MAAM,uBAM9B3B,cAAC4B,IAAM,CAACD,MAAM,UAAUE,QAAQ,YAAYd,KAAK,SAAQd,SACvDD,cAAC8B,IAAI,CAACjB,GAAI,CAAEkB,cAAe,cAAe9B,SAAC,mBCtIjD+B,EAAYhE,YAAO,MAAPA,EAAc,SAAAiE,GAAA,IAAAC,EAAGC,EAAKF,EAALE,MAAK,OAAAD,EAAA,CACtCE,OAAQ,QAAM7C,YAAA2C,EACbC,EAAME,YAAYC,KAAK,MAAQ,CAAEF,OAAQ,SAAQ7C,YAAA2C,EAClD,gBAAe3C,YAAA,CACbpB,aAAc,QACbgE,EAAME,YAAYC,KAAK,MAAQ,CAAEnE,aAAc,UAAQ+D,KAgB7CK,UAZC,WACd,OACEvC,cAACgC,EAAS,CAAA/B,SACRD,cAACwC,IAAK,CAACjC,QAAS,EAAEN,SAChBD,cAACyC,IAAU,CAACC,MAAM,WAAUzC,SAC1BD,cAAC5B,EAAY","file":"static/js/29.460ff44b.chunk.js","sourcesContent":["\r\nimport {\r\n    Button,\r\n    FormControlLabel,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    styled,\r\n  } from \"@mui/material\";\r\n  import { Span } from \"app/components/Typography\";\r\n  import { useEffect, useState } from \"react\";\r\n  import { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\n  const TextField = styled(TextValidator)(() => ({\r\n    width: \"100%\",\r\n    marginBottom: \"16px\",\r\n  }));\r\n  \r\n  const TransferForm = () => {\r\n    const [state, setState] = useState({ date: new Date() });\r\n  \r\n    useEffect(() => {\r\n      ValidatorForm.addValidationRule(\"isPasswordMatch\", (value) => {\r\n        if (value !== state.password) return false;\r\n  \r\n        return true;\r\n      });\r\n      return () => ValidatorForm.removeValidationRule(\"isPasswordMatch\");\r\n    }, [state.password]);\r\n  \r\n    const handleSubmit = (event) => {\r\n      // console.log(\"submitted\");\r\n      // console.log(event);\r\n    };\r\n  \r\n    const handleChange = (event) => {\r\n      event.persist();\r\n      setState({ ...state, [event.target.name]: event.target.value });\r\n    };\r\n  \r\n  \r\n    const {\r\n      firstName,\r\n      lastName,\r\n      role,\r\n      mobile,\r\n      password,\r\n      gender,\r\n      email,\r\n    } = state;\r\n  \r\n    return (\r\n      <div>\r\n        <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n          <Grid container spacing={6}>\r\n            <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n  \r\n              <TextField\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={handleChange}\r\n                value={firstName || \"\"}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n                <TextField\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                onChange={handleChange}\r\n                value={lastName || \"\"}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextField\r\n                type=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={email || \"\"}\r\n                onChange={handleChange}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n              />\r\n              \r\n              <TextField\r\n                type=\"text\"\r\n                name=\"role\"\r\n                label=\"Role\"\r\n                onChange={handleChange}\r\n                value={role || \"\"}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"mobile\"\r\n                value={mobile || \"\"}\r\n                label=\"Mobile Nubmer\"\r\n                onChange={handleChange}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                value={password || \"\"}\r\n                onChange={handleChange}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <RadioGroup\r\n                row\r\n                name=\"gender\"\r\n                sx={{ mb: 2 }}\r\n                value={gender || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Male\"\r\n                  label=\"Male\"\r\n                  labelPlacement=\"end\"\r\n                  control={<Radio color=\"primary\" />}\r\n                />\r\n  \r\n                <FormControlLabel\r\n                  value=\"Female\"\r\n                  label=\"Female\"\r\n                  labelPlacement=\"end\"\r\n                  control={<Radio color=\"primary\" />}\r\n                />\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n            <Span sx={{ textTransform: \"capitalize\" }}>Submit</Span>\r\n          </Button>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default TransferForm;\r\n  ","import { Stack } from \"@mui/material\";\r\nimport {styled } from \"@mui/system\";\r\nimport { SimpleCard } from \"app/components\";\r\nimport TransferForm from \"./Tansfersform\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst AppForm = () => {\r\n  return (\r\n    <Container>\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"Add User\">\r\n          <TransferForm />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n"],"sourceRoot":""}